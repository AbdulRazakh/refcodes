package com.refcodes.portlets.businesscenter.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.refcodes.portlets.businesscenter.model.BusinessUser;
import com.refcodes.portlets.businesscenter.model.BusinessUserModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the BusinessUser service. Represents a row in the &quot;businesscenter_BusinessUser&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.refcodes.portlets.businesscenter.model.BusinessUserModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BusinessUserImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see BusinessUserImpl
 * @see com.refcodes.portlets.businesscenter.model.BusinessUser
 * @see com.refcodes.portlets.businesscenter.model.BusinessUserModel
 * @generated
 */
public class BusinessUserModelImpl extends BaseModelImpl<BusinessUser>
    implements BusinessUserModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a business user model instance should use the {@link com.refcodes.portlets.businesscenter.model.BusinessUser} interface instead.
     */
    public static final String TABLE_NAME = "businesscenter_BusinessUser";
    public static final Object[][] TABLE_COLUMNS = {
            { "uuid_", Types.VARCHAR },
            { "businessUserId", Types.BIGINT },
            { "groupId", Types.BIGINT },
            { "companyId", Types.BIGINT },
            { "firstName", Types.VARCHAR },
            { "lastName", Types.VARCHAR },
            { "email", Types.VARCHAR },
            { "ownerShip", Types.VARCHAR },
            { "categoryId", Types.BIGINT },
            { "phoneNumber", Types.VARCHAR },
            { "createdDate", Types.TIMESTAMP },
            { "createdBy", Types.BIGINT },
            { "updatedDate", Types.TIMESTAMP },
            { "updatedBy", Types.BIGINT }
        };
    public static final String TABLE_SQL_CREATE = "create table businesscenter_BusinessUser (uuid_ VARCHAR(75) null,businessUserId LONG not null primary key,groupId LONG,companyId LONG,firstName VARCHAR(75) null,lastName VARCHAR(75) null,email VARCHAR(75) null,ownerShip VARCHAR(75) null,categoryId LONG,phoneNumber VARCHAR(75) null,createdDate DATE null,createdBy LONG,updatedDate DATE null,updatedBy LONG)";
    public static final String TABLE_SQL_DROP = "drop table businesscenter_BusinessUser";
    public static final String ORDER_BY_JPQL = " ORDER BY businessUser.businessUserId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY businesscenter_BusinessUser.businessUserId ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.refcodes.portlets.businesscenter.model.BusinessUser"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.refcodes.portlets.businesscenter.model.BusinessUser"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.refcodes.portlets.businesscenter.model.BusinessUser"),
            true);
    public static long COMPANYID_COLUMN_BITMASK = 1L;
    public static long GROUPID_COLUMN_BITMASK = 2L;
    public static long UUID_COLUMN_BITMASK = 4L;
    public static long BUSINESSUSERID_COLUMN_BITMASK = 8L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.refcodes.portlets.businesscenter.model.BusinessUser"));
    private static ClassLoader _classLoader = BusinessUser.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            BusinessUser.class
        };
    private String _uuid;
    private String _originalUuid;
    private long _businessUserId;
    private String _businessUserUuid;
    private long _groupId;
    private long _originalGroupId;
    private boolean _setOriginalGroupId;
    private long _companyId;
    private long _originalCompanyId;
    private boolean _setOriginalCompanyId;
    private String _firstName;
    private String _lastName;
    private String _email;
    private String _ownerShip;
    private long _categoryId;
    private String _phoneNumber;
    private Date _createdDate;
    private long _createdBy;
    private Date _updatedDate;
    private long _updatedBy;
    private long _columnBitmask;
    private BusinessUser _escapedModel;

    public BusinessUserModelImpl() {
    }

    @Override
    public long getPrimaryKey() {
        return _businessUserId;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setBusinessUserId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _businessUserId;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return BusinessUser.class;
    }

    @Override
    public String getModelClassName() {
        return BusinessUser.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("uuid", getUuid());
        attributes.put("businessUserId", getBusinessUserId());
        attributes.put("groupId", getGroupId());
        attributes.put("companyId", getCompanyId());
        attributes.put("firstName", getFirstName());
        attributes.put("lastName", getLastName());
        attributes.put("email", getEmail());
        attributes.put("ownerShip", getOwnerShip());
        attributes.put("categoryId", getCategoryId());
        attributes.put("phoneNumber", getPhoneNumber());
        attributes.put("createdDate", getCreatedDate());
        attributes.put("createdBy", getCreatedBy());
        attributes.put("updatedDate", getUpdatedDate());
        attributes.put("updatedBy", getUpdatedBy());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        String uuid = (String) attributes.get("uuid");

        if (uuid != null) {
            setUuid(uuid);
        }

        Long businessUserId = (Long) attributes.get("businessUserId");

        if (businessUserId != null) {
            setBusinessUserId(businessUserId);
        }

        Long groupId = (Long) attributes.get("groupId");

        if (groupId != null) {
            setGroupId(groupId);
        }

        Long companyId = (Long) attributes.get("companyId");

        if (companyId != null) {
            setCompanyId(companyId);
        }

        String firstName = (String) attributes.get("firstName");

        if (firstName != null) {
            setFirstName(firstName);
        }

        String lastName = (String) attributes.get("lastName");

        if (lastName != null) {
            setLastName(lastName);
        }

        String email = (String) attributes.get("email");

        if (email != null) {
            setEmail(email);
        }

        String ownerShip = (String) attributes.get("ownerShip");

        if (ownerShip != null) {
            setOwnerShip(ownerShip);
        }

        Long categoryId = (Long) attributes.get("categoryId");

        if (categoryId != null) {
            setCategoryId(categoryId);
        }

        String phoneNumber = (String) attributes.get("phoneNumber");

        if (phoneNumber != null) {
            setPhoneNumber(phoneNumber);
        }

        Date createdDate = (Date) attributes.get("createdDate");

        if (createdDate != null) {
            setCreatedDate(createdDate);
        }

        Long createdBy = (Long) attributes.get("createdBy");

        if (createdBy != null) {
            setCreatedBy(createdBy);
        }

        Date updatedDate = (Date) attributes.get("updatedDate");

        if (updatedDate != null) {
            setUpdatedDate(updatedDate);
        }

        Long updatedBy = (Long) attributes.get("updatedBy");

        if (updatedBy != null) {
            setUpdatedBy(updatedBy);
        }
    }

    @Override
    public String getUuid() {
        if (_uuid == null) {
            return StringPool.BLANK;
        } else {
            return _uuid;
        }
    }

    @Override
    public void setUuid(String uuid) {
        if (_originalUuid == null) {
            _originalUuid = _uuid;
        }

        _uuid = uuid;
    }

    public String getOriginalUuid() {
        return GetterUtil.getString(_originalUuid);
    }

    @Override
    public long getBusinessUserId() {
        return _businessUserId;
    }

    @Override
    public void setBusinessUserId(long businessUserId) {
        _businessUserId = businessUserId;
    }

    @Override
    public String getBusinessUserUuid() throws SystemException {
        return PortalUtil.getUserValue(getBusinessUserId(), "uuid",
            _businessUserUuid);
    }

    @Override
    public void setBusinessUserUuid(String businessUserUuid) {
        _businessUserUuid = businessUserUuid;
    }

    @Override
    public long getGroupId() {
        return _groupId;
    }

    @Override
    public void setGroupId(long groupId) {
        _columnBitmask |= GROUPID_COLUMN_BITMASK;

        if (!_setOriginalGroupId) {
            _setOriginalGroupId = true;

            _originalGroupId = _groupId;
        }

        _groupId = groupId;
    }

    public long getOriginalGroupId() {
        return _originalGroupId;
    }

    @Override
    public long getCompanyId() {
        return _companyId;
    }

    @Override
    public void setCompanyId(long companyId) {
        _columnBitmask |= COMPANYID_COLUMN_BITMASK;

        if (!_setOriginalCompanyId) {
            _setOriginalCompanyId = true;

            _originalCompanyId = _companyId;
        }

        _companyId = companyId;
    }

    public long getOriginalCompanyId() {
        return _originalCompanyId;
    }

    @Override
    public String getFirstName() {
        if (_firstName == null) {
            return StringPool.BLANK;
        } else {
            return _firstName;
        }
    }

    @Override
    public void setFirstName(String firstName) {
        _firstName = firstName;
    }

    @Override
    public String getLastName() {
        if (_lastName == null) {
            return StringPool.BLANK;
        } else {
            return _lastName;
        }
    }

    @Override
    public void setLastName(String lastName) {
        _lastName = lastName;
    }

    @Override
    public String getEmail() {
        if (_email == null) {
            return StringPool.BLANK;
        } else {
            return _email;
        }
    }

    @Override
    public void setEmail(String email) {
        _email = email;
    }

    @Override
    public String getOwnerShip() {
        if (_ownerShip == null) {
            return StringPool.BLANK;
        } else {
            return _ownerShip;
        }
    }

    @Override
    public void setOwnerShip(String ownerShip) {
        _ownerShip = ownerShip;
    }

    @Override
    public long getCategoryId() {
        return _categoryId;
    }

    @Override
    public void setCategoryId(long categoryId) {
        _categoryId = categoryId;
    }

    @Override
    public String getPhoneNumber() {
        if (_phoneNumber == null) {
            return StringPool.BLANK;
        } else {
            return _phoneNumber;
        }
    }

    @Override
    public void setPhoneNumber(String phoneNumber) {
        _phoneNumber = phoneNumber;
    }

    @Override
    public Date getCreatedDate() {
        return _createdDate;
    }

    @Override
    public void setCreatedDate(Date createdDate) {
        _createdDate = createdDate;
    }

    @Override
    public long getCreatedBy() {
        return _createdBy;
    }

    @Override
    public void setCreatedBy(long createdBy) {
        _createdBy = createdBy;
    }

    @Override
    public Date getUpdatedDate() {
        return _updatedDate;
    }

    @Override
    public void setUpdatedDate(Date updatedDate) {
        _updatedDate = updatedDate;
    }

    @Override
    public long getUpdatedBy() {
        return _updatedBy;
    }

    @Override
    public void setUpdatedBy(long updatedBy) {
        _updatedBy = updatedBy;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
            BusinessUser.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public BusinessUser toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (BusinessUser) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        BusinessUserImpl businessUserImpl = new BusinessUserImpl();

        businessUserImpl.setUuid(getUuid());
        businessUserImpl.setBusinessUserId(getBusinessUserId());
        businessUserImpl.setGroupId(getGroupId());
        businessUserImpl.setCompanyId(getCompanyId());
        businessUserImpl.setFirstName(getFirstName());
        businessUserImpl.setLastName(getLastName());
        businessUserImpl.setEmail(getEmail());
        businessUserImpl.setOwnerShip(getOwnerShip());
        businessUserImpl.setCategoryId(getCategoryId());
        businessUserImpl.setPhoneNumber(getPhoneNumber());
        businessUserImpl.setCreatedDate(getCreatedDate());
        businessUserImpl.setCreatedBy(getCreatedBy());
        businessUserImpl.setUpdatedDate(getUpdatedDate());
        businessUserImpl.setUpdatedBy(getUpdatedBy());

        businessUserImpl.resetOriginalValues();

        return businessUserImpl;
    }

    @Override
    public int compareTo(BusinessUser businessUser) {
        long primaryKey = businessUser.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof BusinessUser)) {
            return false;
        }

        BusinessUser businessUser = (BusinessUser) obj;

        long primaryKey = businessUser.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        BusinessUserModelImpl businessUserModelImpl = this;

        businessUserModelImpl._originalUuid = businessUserModelImpl._uuid;

        businessUserModelImpl._originalGroupId = businessUserModelImpl._groupId;

        businessUserModelImpl._setOriginalGroupId = false;

        businessUserModelImpl._originalCompanyId = businessUserModelImpl._companyId;

        businessUserModelImpl._setOriginalCompanyId = false;

        businessUserModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<BusinessUser> toCacheModel() {
        BusinessUserCacheModel businessUserCacheModel = new BusinessUserCacheModel();

        businessUserCacheModel.uuid = getUuid();

        String uuid = businessUserCacheModel.uuid;

        if ((uuid != null) && (uuid.length() == 0)) {
            businessUserCacheModel.uuid = null;
        }

        businessUserCacheModel.businessUserId = getBusinessUserId();

        businessUserCacheModel.groupId = getGroupId();

        businessUserCacheModel.companyId = getCompanyId();

        businessUserCacheModel.firstName = getFirstName();

        String firstName = businessUserCacheModel.firstName;

        if ((firstName != null) && (firstName.length() == 0)) {
            businessUserCacheModel.firstName = null;
        }

        businessUserCacheModel.lastName = getLastName();

        String lastName = businessUserCacheModel.lastName;

        if ((lastName != null) && (lastName.length() == 0)) {
            businessUserCacheModel.lastName = null;
        }

        businessUserCacheModel.email = getEmail();

        String email = businessUserCacheModel.email;

        if ((email != null) && (email.length() == 0)) {
            businessUserCacheModel.email = null;
        }

        businessUserCacheModel.ownerShip = getOwnerShip();

        String ownerShip = businessUserCacheModel.ownerShip;

        if ((ownerShip != null) && (ownerShip.length() == 0)) {
            businessUserCacheModel.ownerShip = null;
        }

        businessUserCacheModel.categoryId = getCategoryId();

        businessUserCacheModel.phoneNumber = getPhoneNumber();

        String phoneNumber = businessUserCacheModel.phoneNumber;

        if ((phoneNumber != null) && (phoneNumber.length() == 0)) {
            businessUserCacheModel.phoneNumber = null;
        }

        Date createdDate = getCreatedDate();

        if (createdDate != null) {
            businessUserCacheModel.createdDate = createdDate.getTime();
        } else {
            businessUserCacheModel.createdDate = Long.MIN_VALUE;
        }

        businessUserCacheModel.createdBy = getCreatedBy();

        Date updatedDate = getUpdatedDate();

        if (updatedDate != null) {
            businessUserCacheModel.updatedDate = updatedDate.getTime();
        } else {
            businessUserCacheModel.updatedDate = Long.MIN_VALUE;
        }

        businessUserCacheModel.updatedBy = getUpdatedBy();

        return businessUserCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(29);

        sb.append("{uuid=");
        sb.append(getUuid());
        sb.append(", businessUserId=");
        sb.append(getBusinessUserId());
        sb.append(", groupId=");
        sb.append(getGroupId());
        sb.append(", companyId=");
        sb.append(getCompanyId());
        sb.append(", firstName=");
        sb.append(getFirstName());
        sb.append(", lastName=");
        sb.append(getLastName());
        sb.append(", email=");
        sb.append(getEmail());
        sb.append(", ownerShip=");
        sb.append(getOwnerShip());
        sb.append(", categoryId=");
        sb.append(getCategoryId());
        sb.append(", phoneNumber=");
        sb.append(getPhoneNumber());
        sb.append(", createdDate=");
        sb.append(getCreatedDate());
        sb.append(", createdBy=");
        sb.append(getCreatedBy());
        sb.append(", updatedDate=");
        sb.append(getUpdatedDate());
        sb.append(", updatedBy=");
        sb.append(getUpdatedBy());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(46);

        sb.append("<model><model-name>");
        sb.append("com.refcodes.portlets.businesscenter.model.BusinessUser");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>uuid</column-name><column-value><![CDATA[");
        sb.append(getUuid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>businessUserId</column-name><column-value><![CDATA[");
        sb.append(getBusinessUserId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>groupId</column-name><column-value><![CDATA[");
        sb.append(getGroupId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyId</column-name><column-value><![CDATA[");
        sb.append(getCompanyId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>firstName</column-name><column-value><![CDATA[");
        sb.append(getFirstName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>lastName</column-name><column-value><![CDATA[");
        sb.append(getLastName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>email</column-name><column-value><![CDATA[");
        sb.append(getEmail());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>ownerShip</column-name><column-value><![CDATA[");
        sb.append(getOwnerShip());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>categoryId</column-name><column-value><![CDATA[");
        sb.append(getCategoryId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>phoneNumber</column-name><column-value><![CDATA[");
        sb.append(getPhoneNumber());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdDate</column-name><column-value><![CDATA[");
        sb.append(getCreatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdBy</column-name><column-value><![CDATA[");
        sb.append(getCreatedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>updatedDate</column-name><column-value><![CDATA[");
        sb.append(getUpdatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>updatedBy</column-name><column-value><![CDATA[");
        sb.append(getUpdatedBy());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
